num_inputs = 50;
  // Initialize 50 test cases
  init( 0, 32'hFACB0421, 32'b0, 32'hFACB0421 * 32'b0 );
  init( 1, 32'h1D3E9C2A, 32'b1, 32'h1D3E9C2A * 32'b1 );
  init( 2, 32'h7DCBFA21, 32'b0, 32'h7DCBFA21 * 32'b0 );
  init( 3, 32'hBA9F03E7, 32'b1, 32'hBA9F03E7 * 32'b1 );
  init( 4, 32'hE5A1904C, 32'b0, 32'hE5A1904C * 32'b0 );
  init( 5, 32'h87FAC321, 32'b1, 32'h87FAC321 * 32'b1 );
  init( 6, 32'hD093AB01, 32'b0, 32'hD093AB01 * 32'b0 );
  init( 7, 32'h23FA901B, 32'b1, 32'h23FA901B * 32'b1 );
  init( 8, 32'hF10B32AA, 32'b0, 32'hF10B32AA * 32'b0 );
  init( 9, 32'h90FFED10, 32'b1, 32'h90FFED10 * 32'b1 );
  init( 10, 32'h4F32A012, 32'b0, 32'h4F32A012 * 32'b0 );
  init( 11, 32'h8EF3AA12, 32'b1, 32'h8EF3AA12 * 32'b1 );
  init( 12, 32'h1F230421, 32'b0, 32'h1F230421 * 32'b0 );
  init( 13, 32'hF04C3A12, 32'b1, 32'hF04C3A12 * 32'b1 );
  init( 14, 32'h98D12C01, 32'b0, 32'h98D12C01 * 32'b0 );
  init( 15, 32'hF432AB12, 32'b1, 32'hF432AB12 * 32'b1 );
  init( 16, 32'hE893421A, 32'b0, 32'hE893421A * 32'b0 );
  init( 17, 32'h01BC3A21, 32'b1, 32'h01BC3A21 * 32'b1 );
  init( 18, 32'h09F0E321, 32'b0, 32'h09F0E321 * 32'b0 );
  init( 19, 32'h2310A3F2, 32'b1, 32'h2310A3F2 * 32'b1 );
  init( 20, 32'h10F0F231, 32'b0, 32'h10F0F231 * 32'b0 );
  init( 21, 32'h21B0F130, 32'b1, 32'h21B0F130 * 32'b1 );
  init( 22, 32'h9C23D210, 32'b0, 32'h9C23D210 * 32'b0 );
  init( 23, 32'hF3B0A102, 32'b1, 32'hF3B0A102 * 32'b1 );
  init( 24, 32'h01FA3021, 32'b0, 32'h01FA3021 * 32'b0 );
  init( 25, 32'hA093AF12, 32'b1, 32'hA093AF12 * 32'b1 );
  init( 26, 32'h40B12013, 32'b0, 32'h40B12013 * 32'b0 );
  init( 27, 32'hA9C03210, 32'b1, 32'hA9C03210 * 32'b1 );
  init( 28, 32'h1320F210, 32'b0, 32'h1320F210 * 32'b0 );
  init( 29, 32'hF032AC11, 32'b1, 32'hF032AC11 * 32'b1 );
  init( 30, 32'hAF012310, 32'b0, 32'hAF012310 * 32'b0 );
  init( 31, 32'h01FA0132, 32'b1, 32'h01FA0132 * 32'b1 );
  init( 32, 32'hF3A0B321, 32'b0, 32'hF3A0B321 * 32'b0 );
  init( 33, 32'h10F0A312, 32'b1, 32'h10F0A312 * 32'b1 );
  init( 34, 32'h31A0F320, 32'b0, 32'h31A0F320 * 32'b0 );
  init( 35, 32'h20F1A302, 32'b1, 32'h20F1A302 * 32'b1 );
  init( 36, 32'h32A0F103, 32'b0, 32'h32A0F103 * 32'b0 );
  init( 37, 32'h1F032A01, 32'b1, 32'h1F032A01 * 32'b1 );
  init( 38, 32'h21F0A312, 32'b0, 32'h21F0A312 * 32'b0 );
  init( 39, 32'hF321A013, 32'b1, 32'hF321A013 * 32'b1 );
  init( 40, 32'h2F31A210, 32'b0, 32'h2F31A210 * 32'b0 );
  init( 41, 32'h0F21A301, 32'b1, 32'h0F21A301 * 32'b1 );
  init( 42, 32'hA3210F01, 32'b0, 32'hA3210F01 * 32'b0 );
  init( 43, 32'h32A0F205, 32'b0, 32'h32A0F205 * 32'b0 );
  init( 44, 32'h1F908A01, 32'b1, 32'h1F908A01 * 32'b1 );
  init( 45, 32'h29F0A312, 32'b0, 32'h29F0A312 * 32'b0 );
  init( 46, 32'hC321A013, 32'b1, 32'hC321A013 * 32'b1 );
  init( 47, 32'h2E31A210, 32'b0, 32'h2E31A210 * 32'b0 );
  init( 48, 32'h0F19A301, 32'b1, 32'h0F19A301 * 32'b1 );
  init( 49, 32'hA5190F01, 32'b0, 32'hA5190F01 * 32'b0 );
